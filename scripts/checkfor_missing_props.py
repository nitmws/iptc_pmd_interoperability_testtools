"""
Script for matching the exiftool-JSON retrieved from a test image
against a JSON object acting as IPTC Standard reference

"""
import os
import shutil
import yaml
import datetime
from scripts import ipmdchecker2 as ipmdchecker

currentdir: str = os.path.dirname(os.path.realpath(__file__))

CONFIGFP: str = currentdir + '/config/scriptsconfig.yml'
with open(CONFIGFP) as yaml_file1:
    scriptconfigs = yaml.safe_load(yaml_file1)

FILESDIR: str = currentdir + '/' + scriptconfigs['general']['filespathrel']
TESTRESULTSDIR = FILESDIR + 'testresults/'
LOGFP = TESTRESULTSDIR + 'testresults_all.txt'

# Test3 specific directories
TEST3DIR: str = FILESDIR + 'test3/'
CACHE3DIR: str = FILESDIR + 'cache/test3/'
BACKUP3DIR: str = FILESDIR + 'backup/test3/'


def run_test3(testimgfn: str) -> None:
    """Runs IPTC Photo Metadata Interoperability Test #3 with a single image file

    :param testimgfn: file name of the to be tested image file
    :return: nothing
    """
    coretestimgfn = os.path.splitext(testimgfn)[0]
    testimgfp = TEST3DIR + testimgfn
    testjsonfp = CACHE3DIR + coretestimgfn + '.json'
    testresults1fp = TESTRESULTSDIR + coretestimgfn + '.txt'
    backupimgfp = BACKUP3DIR + testimgfn

    ipmdchecker.readpmd_exiftool(testimgfp, testjsonfp)
    if os.path.isfile(testjsonfp):
        msg = 'Tested(3) JSON file of image: ' + testimgfn
        print(msg)
        ipmdchecker.append_line2file(msg, LOGFP)
        ipmdchecker.append_line2file(msg, testresults1fp)
        msg = 'Tested on: ' + datetime.datetime.now().astimezone().replace(microsecond=0).isoformat()
        print(msg)
        ipmdchecker.append_line2file(msg, LOGFP)
        ipmdchecker.append_line2file(msg, testresults1fp)

        ipmdchecker.check_mainpmd(testjsonfp, testresults1fp)
        ipmdchecker.append_line2file('***** TEST FINISHED *****', testresults1fp)
        shutil.move(testimgfp, backupimgfp)
    else:
        print(f'No JSON file generated by ExifTool for {testjsonfp}')


def testdummy1():
    testfilename = '_testimg_benchSnow1t2'
    testfp = '../files/cache/test3/' + testfilename + '.json'
    testresults1fp = TESTRESULTSDIR + testfilename + '.txt'
    ipmdchecker.append_line2file('Tested JSON file: ' + testfp, LOGFP)
    ipmdchecker.append_line2file('Tested JSON file: ' + testfp, testresults1fp)
    ipmdchecker.check_mainpmd(testfp, testresults1fp)


if __name__ == '__main__':

    DEV: bool = False

    if DEV:
        testdummy1()
    else:
        foundtest3images = ipmdchecker.find_testfiles(TEST3DIR)
        print(foundtest3images)
        for singletestimgfn in foundtest3images:
            run_test3(singletestimgfn)
